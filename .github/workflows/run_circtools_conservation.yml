name: circtools conservation (pip)

on:
  workflow_run:
    workflows: ["API Health Check"]
    types: [completed]

concurrency:
  group: ci-tests-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  Main:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-13, macos-15, ubuntu-22.04, ubuntu-24.04 ]
        R: ['4.4.0', '4.5.1']
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    name: R ${{ matrix.R }} | Python ${{ matrix.python-version }} | ${{ matrix.os }}
    steps:
    - name: Create files
      uses: actions/checkout@v4
      with:
       ref: ${{ github.ref_name }}
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: ''
    - name: Updating setuptools
      run: |
         python3 -m pip install -U pip setuptools
    - name: Installing circtools & Python dependencies
      run: |
         if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y \
                make g++ zlib1g-dev \
                libblas-dev libatlas-base-dev liblapack-dev \
                libcurl4-openssl-dev libssl-dev libxml2-dev \
                libfontconfig1-dev libharfbuzz-dev libfribidi-dev \
                libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev
            python3 -m pip install ./
         fi
         if [ "$RUNNER_OS" == "macOS"]; then
            export SYSTEM_VERSION_COMPAT=1
            sudo rm -rf /Library/Developer/CommandLineTools
            sudo xcode-select --install
            python3 -m pip install ./
         else
            python3 -m pip install ./
         fi
         
    - name: Check if circtools starts
      run: |
         circtools --version
         which circtools


    - name: Fix zcat on macOS
      if: runner.os == 'macOS'
      run: |
        sudo ln -sf $(which gzcat) /usr/local/bin/zcat

    - name: Install BEDTools from source (v2.31.1)
      run: |
        if [ "$RUNNER_OS" = "Linux" ]; then
          wget https://github.com/arq5x/bedtools2/releases/download/v2.31.1/bedtools-2.31.1.tar.gz
          tar -xzf bedtools-2.31.1.tar.gz
          cd bedtools2
          make -j4
          sudo cp bin/* /usr/local/bin/
        elif [ "$RUNNER_OS" = "macOS" ]; then
          brew update
          brew install make zlib
          wget https://github.com/arq5x/bedtools2/releases/download/v2.31.1/bedtools-2.31.1.tar.gz
          tar -xzf bedtools-2.31.1.tar.gz
          cd bedtools2
          make -j4
          sudo cp bin/* /usr/local/bin/
        else
          echo "Unsupported OS: $RUNNER_OS" >&2
          exit 1
        fi

    - name: Unpack test dataset
      run: |
        tar xvf ./tests/data/circtools_example.tar.bz2
        cd circtools_example
        if [ -f genome.fa.gz ]; then gunzip -f genome.fa.gz; fi
        if [ -f annotation.gtf.gz ]; then gunzip -f annotation.gtf.gz; fi
        ls -lh

    - name: Run conservation with PDF output
      env:
        MPLBACKEND: pdf
        MPLCONFIGDIR: ${{ github.workspace }}/.mplconfig
      run: |
        cd circtools_example
        mkdir -p conservation/temp "$MPLCONFIGDIR"
        export MPLBACKEND=Agg
        circtools conservation \
          -d ./circtools_ci_master/CircCoordinates \
          -f ./genome.fa \
          -g ./annotation.gtf \
          -O mm \
          -G Map3k5 \
          -o ./conservation/ \
          -t ./conservation/temp/ \
          -TS hs \
          -pairwise


    - name: Checking generated output against master output
      run: |
        set -x
        cd circtools_example/conservation
        if [ "$RUNNER_OS" = "Linux" ]; then
          MASTER_DIR="../conservation_master"
          diff alignment_Map3k5_10_20000698_20007954_+.fasta.aligned \
                "$MASTER_DIR/alignment_Map3k5_10_20000698_20007954_+.fasta.aligned"
          sha1sum -c "$MASTER_DIR/sha1sums.txt"
        elif [ "$RUNNER_OS" = "macOS" ] && [ "${{ matrix.os }}" = "macos-13" ]; then
          MASTER_DIR="../conservation_master_mac_amd"
          diff alignment_Map3k5_10_20000698_20007954_+.fasta.aligned \
                "$MASTER_DIR/alignment_Map3k5_10_20000698_20007954_+.fasta.aligned"
          shasum -a 1 -c "$MASTER_DIR/sha1sums.txt"
        elif [ "$RUNNER_OS" = "macOS" ]; then
          MASTER_DIR="../conservation_master_mac"
          diff alignment_Map3k5_10_20000698_20007954_+.fasta.aligned \
                "$MASTER_DIR/alignment_Map3k5_10_20000698_20007954_+.fasta.aligned"
          shasum -a 1 -c "$MASTER_DIR/sha1sums.txt"
        else
          echo "Unsupported OS: $RUNNER_OS" >&2
          exit 1
        fi
