name: circtools padlock (pip)

on:
  push:
  schedule:
    - cron: '0 11 * * *'

concurrency:
  group: ci-tests-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Main:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-13, macos-15, ubuntu-22.04, ubuntu-24.04 ]
        R: ['4.4.0', '4.5.1']
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    name: R ${{ matrix.R }} | Python ${{ matrix.python-version }} | ${{ matrix.os }}
    steps:
    - name: Create files (with retry)
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 5
        max_attempts: 3
        retry_on: error
        command: |
          gh workflow run actions/checkout@v4 --ref ${{ github.ref_name }}

    - name: Set up Python (with retry)
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 5
        max_attempts: 3
        retry_on: error
        command: |
          gh workflow run actions/setup-python@v5 --inputs "python-version=${{ matrix.python-version }}"

    - name: Updating setuptools (with retry)
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 5
        max_attempts: 3
        retry_on: error
        command: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -U pip setuptools

    - name: Installing circtools & Python dependencies (with retry)
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 15
        max_attempts: 3
        retry_on: error
        command: |
          if [ "$RUNNER_OS" == "ubuntu-22.04" ]; then
            apt-get install libblas-dev libatlas-base-dev liblapack-dev -y
          fi
          if [ "$RUNNER_OS" == "macOS" ]; then
            export SYSTEM_VERSION_COMPAT=1
            sudo rm -rf /Library/Developer/CommandLineTools
            sudo xcode-select --install
            python3 -m pip install ./
          else
            python3 -m pip install ./
          fi

    - name: Set up R (with retry)
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 10
        max_attempts: 3
        retry_on: error
        command: |
          gh workflow run r-lib/actions/setup-r@v2 --inputs "r-version=${{ matrix.R }}"

    - name: Set up R dependencies (with retry)
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 10
        max_attempts: 3
        retry_on: error
        command: |
          gh workflow run r-lib/actions/setup-r-dependencies@v2 --inputs "cache-version=1,extra-packages=local::circtools/contrib/circtest local::circtools/contrib/primex"

    - name: Install BEDTools from source (v2.31.1) (with retry)
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 20
        max_attempts: 3
        retry_on: error
        command: |
          if [ "$RUNNER_OS" = "Linux" ]; then
            wget https://github.com/arq5x/bedtools2/releases/download/v2.31.1/bedtools-2.31.1.tar.gz
            tar -xzf bedtools-2.31.1.tar.gz
            cd bedtools2
            make -j4
            sudo cp bin/* /usr/local/bin/
          elif [ "$RUNNER_OS" = "macOS" ]; then
            brew update
            brew install make zlib
            wget https://github.com/arq5x/bedtools2/releases/download/v2.31.1/bedtools-2.31.1.tar.gz
            tar -xzf bedtools-2.31.1.tar.gz
            cd bedtools2
            make -j4
            sudo cp bin/* /usr/local/bin/
          else
            echo "Unsupported OS: $RUNNER_OS" >&2
            exit 1
          fi


    - name: Checking library loading
      run: Rscript -e 'library(primex)'
    - name: Check if circtools starts
      run: |
         circtools --version
         which circtools
    - name: Downloading circtools detect test data
      run: |
        tar xvf ./tests/data/circtools_example.tar.bz2
    - name: Run padlock
      run: |
        cd circtools_example
        mkdir -p padlock_output
        circtools padlock \
          -f ./genome.fa \
          -g ./annotation.gtf \
          -O mm \
          -G Slc16a9 \
          -T Slc16a9_padlock_design \
          -r 1 \
          -b \
          -o ./padlock_output

    - name: Checking generated output against master output
      run: |
        cd circtools_example/padlock_output
        ls -la
        wc -l *

        if [ "$RUNNER_OS" = "Linux" ]; then
          MASTER_DIR="../padlock_output_master"
        elif [ "$RUNNER_OS" = "macOS" ] && [ "${{ matrix.os }}" = "macos-13" ]; then
          MASTER_DIR="../padlock_output_master_mac_amd"
        elif [ "$RUNNER_OS" = "macOS" ]; then
          MASTER_DIR="../padlock_output_master_mac"
        else
          echo "Unsupported OS: $RUNNER_OS" >&2
          exit 1
        fi

        diff Slc16a9_padlock_design_linear_FSJ.csv "$MASTER_DIR/Slc16a9_padlock_design_linear_FSJ.csv"
        if [ "$RUNNER_OS" = "Linux" ]; then
          sha1sum -c "$MASTER_DIR/sha1sums.txt"
        else
          shasum -a 1 -c "$MASTER_DIR/sha1sums.txt"
        fi

