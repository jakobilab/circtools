name: circtools padlock (pip)

on:
  push:
  schedule:
    - cron: '0 11 * * *'

concurrency:
  group: ci-tests-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Main:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-13, macos-15, ubuntu-22.04, ubuntu-24.04 ]
        R:  ['4.4.0', '4.5.1' ]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    name: R ${{ matrix.R }} | Python ${{ matrix.python-version }} | ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref_name }}

    - name: Setup environment (with retry)
      uses: nick-fields/retry@v3
      with:
        max_attempts: 3
        timeout_minutes: 30
        command: |
          echo "--- Python ---"
          python3 -m pip install --upgrade pip setuptools

          echo "--- Circtools ---"
          if [ "$RUNNER_OS" = "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y libblas-dev libatlas-base-dev liblapack-dev
          fi

          if [ "$RUNNER_OS" = "macOS" ]; then
            export SYSTEM_VERSION_COMPAT=1
            sudo rm -rf /Library/Developer/CommandLineTools || true
            sudo xcode-select --install || true
          fi

          python3 -m pip install ./

          echo "--- R ---"
          Rscript -e "install.packages('remotes')"
          Rscript -e "remotes::install_local('circtools/contrib/circtest')"
          Rscript -e "remotes::install_local('circtools/contrib/primex')"

          echo "--- BEDTools ---"
          if [ "$RUNNER_OS" = "Linux" ]; then
            wget https://github.com/arq5x/bedtools2/releases/download/v2.31.1/bedtools-2.31.1.tar.gz
            tar -xzf bedtools-2.31.1.tar.gz
            cd bedtools2
            make -j4
            sudo cp bin/* /usr/local/bin/
            cd ..
          elif [ "$RUNNER_OS" = "macOS" ]; then
            brew update
            brew install make zlib
            wget https://github.com/arq5x/bedtools2/releases/download/v2.31.1/bedtools-2.31.1.tar.gz
            tar -xzf bedtools-2.31.1.tar.gz
            cd bedtools2
            make -j4
            sudo cp bin/* /usr/local/bin/
            cd ..
          fi

    - name: Checking library loading
      run: Rscript -e 'library(primex)'

    - name: Check if circtools starts
      run: |
        circtools --version
        which circtools

    - name: Downloading circtools detect test data
      run: tar xvf ./tests/data/circtools_example.tar.bz2

    - name: Run padlock
      run: |
        cd circtools_example
        mkdir -p padlock_output
        circtools padlock \
          -f ./genome.fa \
          -g ./annotation.gtf \
          -O mm \
          -G Slc16a9 \
          -T Slc16a9_padlock_design \
          -r 1 \
          -b \
          -o ./padlock_output

    - name: Checking generated output against master output
      run: |
        cd circtools_example/padlock_output
        ls -la
        wc -l *

        if [ "$RUNNER_OS" = "Linux" ]; then
          MASTER_DIR="../padlock_output_master"
        elif [ "$RUNNER_OS" = "macOS" ] && [ "${{ matrix.os }}" = "macos-13" ]; then
          MASTER_DIR="../padlock_output_master_mac_amd"
        elif [ "$RUNNER_OS" = "macOS" ]; then
          MASTER_DIR="../padlock_output_master_mac"
        else
          echo "Unsupported OS: $RUNNER_OS" >&2
          exit 1
        fi

        diff Slc16a9_padlock_design_linear_FSJ.csv "$MASTER_DIR/Slc16a9_padlock_design_linear_FSJ.csv"
        if [ "$RUNNER_OS" = "Linux" ]; then
          sha1sum -c "$MASTER_DIR/sha1sums.txt"
        else
          shasum -a 1 -c "$MASTER_DIR/sha1sums.txt"
        fi
