name: circtools primex (pip)

on:
  workflow_run:
    workflows: ["API Health Check"]
    types: [completed]
  
concurrency:
  group: ci-tests-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  Main:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-13, macos-15, ubuntu-22.04, ubuntu-24.04 ]
        R: ['4.4.0', '4.5.1']
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    name: R ${{ matrix.R }} | Python ${{ matrix.python-version }} | ${{ matrix.os }}
    steps:
    - name: Create files
      uses: actions/checkout@v4
      with:
       ref: ${{ github.ref_name }}
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: ''
    - name: Updating setuptools
      run: |
         python3 -m pip install -U pip setuptools
    - name: Installing circtools & Python dependencies
      run: |
         if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y \
                make g++ zlib1g-dev \
                libblas-dev libatlas-base-dev liblapack-dev \
                libcurl4-openssl-dev libssl-dev libxml2-dev \
                libfontconfig1-dev libharfbuzz-dev libfribidi-dev \
                libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev
            python3 -m pip install ./
         fi
         if [ "$RUNNER_OS" == "macOS"]; then
            export SYSTEM_VERSION_COMPAT=1
            sudo rm -rf /Library/Developer/CommandLineTools
            sudo xcode-select --install
            python3 -m pip install ./
         else
            python3 -m pip install ./
         fi


    - name: Set up R
      id: setup-r
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{ matrix.R }}
        use-public-rspm: false
      continue-on-error: true

    - name: Retry Set up R if failed
      if: steps.setup-r.outcome == 'failure'
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{ matrix.R }}
        use-public-rspm: false

    - name: Install R dependencies (with retry, prefer binaries)
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 40  
        max_attempts: 3
        retry_on: error
        command: |
          # Configure CRAN binaries on Linux runners
          if [ "$RUNNER_OS" = "Linux" ]; then
            UBUNTU_VERSION=$(lsb_release -cs)  # e.g. jammy, noble
            echo "options(repos = c(RSPM = sprintf('https://packagemanager.posit.co/cran/__linux__/%s/latest', '$UBUNTU_VERSION')))" >> ~/.Rprofile
          fi

          # Run your dependency installer

          Rscript circtools/scripts/install_R_dependencies.R
      env:
        GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}


   
    - name: Checking library loading
      run: Rscript -e 'library(primex)'
    - name: Check if circtools starts
      run: |
         circtools --version
         which circtools


    - name: Fix zcat on macOS
      if: runner.os == 'macOS'
      run: |
        sudo ln -sf $(which gzcat) /usr/local/bin/zcat

    - name: Install BEDTools from source (v2.31.1)
      run: |
        if [ "$RUNNER_OS" = "Linux" ]; then
          wget https://github.com/arq5x/bedtools2/releases/download/v2.31.1/bedtools-2.31.1.tar.gz
          tar -xzf bedtools-2.31.1.tar.gz
          cd bedtools2
          make -j4
          sudo cp bin/* /usr/local/bin/
        elif [ "$RUNNER_OS" = "macOS" ]; then
          brew update
          brew install make zlib
          wget https://github.com/arq5x/bedtools2/releases/download/v2.31.1/bedtools-2.31.1.tar.gz
          tar -xzf bedtools-2.31.1.tar.gz
          cd bedtools2
          make -j4
          sudo cp bin/* /usr/local/bin/
        else
          echo "Unsupported OS: $RUNNER_OS" >&2
          exit 1
        fi
    - name: Unpack test dataset
      run: |
        tar xvf ./tests/data/circtools_example.tar.bz2
        cd circtools_example
        if [ -f genome.fa.gz ]; then gunzip -f genome.fa.gz; fi
        if [ -f annotation.gtf.gz ]; then gunzip -f annotation.gtf.gz; fi
        ls -lh
    
    - name: Run circtools primer design with retry
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 10
        max_attempts: 3
        retry_wait_seconds: 7200
        command: |
          cd circtools_example
          mkdir -p primer_output
          circtools primex \
            -d ./circtools_ci_master/CircCoordinates \
            -f ./genome.fa \
            -g ./annotation.gtf \
            -O mm \
            -G Slc16a9 \
            -T "Slc16a9_primer" \
            -o ./primer_output/

    - name: Checking generated output against master output
      run: |
        set -x
        cd circtools_example/primer_output
        if [ "$RUNNER_OS" = "Linux" ]; then
          MASTER_DIR="../primer_output_master"
          diff Slc16a9_primer_primers.csv \
                "$MASTER_DIR/Slc16a9_primer_primers.csv"
          sha1sum -c "$MASTER_DIR/sha1sums.txt"
        elif [ "$RUNNER_OS" = "macOS" ] && [ "${{ matrix.os }}" = "macos-13" ]; then
          MASTER_DIR="../primer_output_master_mac_amd"
          diff Slc16a9_primer_primers.csv \
                "$MASTER_DIR/Slc16a9_primer_primers.csv"
          shasum -a 1 -c "$MASTER_DIR/sha1sums.txt"
        elif [ "$RUNNER_OS" = "macOS" ]; then
          MASTER_DIR="../primer_output_master_mac"
          diff Slc16a9_primer_primers.csv \
                "$MASTER_DIR/Slc16a9_primer_primers.csv"
          shasum -a 1 -c "$MASTER_DIR/sha1sums.txt"
        else
          echo "Unsupported OS: $RUNNER_OS" >&2
          exit 1
        fi




  


