name: circtools nanopore (docker)

on:
  workflow_run:
    workflows: ["Multi-arch docker container", "Multi-arch docker nightly"]
    types: [completed]

concurrency:
  group: ci-tests-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-circtest-docker:
    name: circtools circtest (Docker)
    runs-on: ubuntu-24.04
    env:
      GHCR_REPO: ghcr.io/jakobilab/circtools
    steps:
      - name: Set image tag based on triggering workflow
        run: |
          if [[ "${{ github.event.workflow_run.workflow }}" == "Multi-arch docker nightly" ]]; then
            echo "GHCR_IMAGE=${GHCR_REPO}:nightly" >> $GITHUB_ENV
          else
            echo "GHCR_IMAGE=${GHCR_REPO}:latest" >> $GITHUB_ENV
          fi
          echo "Using image: $(cat $GITHUB_ENV | grep GHCR_IMAGE)"

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Pull image
        run: docker pull "${GHCR_IMAGE}"

      - name: Fix zcat on macOS
        if: runner.os == 'macOS'
        run: |
          sudo ln -sf $(which gzcat) /usr/local/bin/zcat

      - name: Unpack test dataset
        run: |
          tar xvf ./tests/data/circtools_example.tar.bz2
          cd circtools_example
          # Ensure genome + annotation are uncompressed
          if [ -f genome.fa.gz ]; then gunzip -f genome.fa.gz; fi
          if [ -f annotation.gtf.gz ]; then gunzip -f annotation.gtf.gz; fi
          ls -lh

      - name: Subsample nanopore data
        run: |
          cd circtools_example
          # Copy human nanopore dataset from repo
          cp ../tests/data/human_nanopore.fastq.gz .
          # Extract first 1M reads (4M lines)
          zcat human_nanopore.fastq.gz | head -n 4000000 | gzip > human_nanopore_1M.fastq.gz
          ls -lh human_nanopore_1M.fastq.gz

      - name: Download reference data with retry
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_wait_seconds: 7200
          command: |
            cd circtools_example
            mkdir -p reference
            docker run --rm \
              -v "$(pwd):/host_rel/" \
              -w /host_rel \
              "${GHCR_IMAGE}" \
              nanopore \
                -d \
                -R reference \
                -C hg38




      - name: Run circtools nanopore (Docker)
        run: |
          cd circtools_example
          mkdir -p nanopore_output
          docker run --rm \
            -v "$(pwd):/host_rel/" \
            -w /host_rel \
            "${GHCR_IMAGE}" \
            nanopore \
              -r \
              -s human_nanopore_1M.fastq.gz \
              -R reference \
              -C hg38 \
              -O nanopore_output/ \
              --threads 16


      - name: Checking generated output against master output
        run: |
          cd circtools_example
          cd nanopore_output
          ls -la
          wc -l *
            if [ "$RUNNER_OS" = "Linux" ]; then
              MASTER_DIR="../nanopore_master"
              diff human_nanopore_1M.circRNA_candidates.annotated.txt "$MASTER_DIR/human_nanopore_1M.circRNA_candidates.annotated.txt"
              sha1sum -c "$MASTER_DIR/sha1sums.txt"
            elif [ "$RUNNER_OS" = "macOS" ] && [ "${{ matrix.os }}" = "macos-13" ]; then
              MASTER_DIR="../nanopore_master"
              diff human_nanopore_1M.circRNA_candidates.annotated.txt "$MASTER_DIR/human_nanopore_1M.circRNA_candidates.annotated.txt"
              shasum -a 1 -c "$MASTER_DIR/sha1sums.txt"
            elif [ "$RUNNER_OS" = "macOS" ]; then
              MASTER_DIR="../nanopore_master"
              diff human_nanopore_1M.circRNA_candidates.annotated.txt "$MASTER_DIR/human_nanopore_1M.circRNA_candidates.annotated.txt"
              shasum -a 1 -c "$MASTER_DIR/sha1sums.txt"
            else
              echo "Unsupported OS: $RUNNER_OS" >&2
              exit 1
            fi

      - name: Upload circRNA candidates artifact
        uses: actions/upload-artifact@v4
        with:
          name: circRNA-candidates
          path: circtools_example/nanopore_output/human_nanopore_1M.circRNA_candidates.annotated.txt

